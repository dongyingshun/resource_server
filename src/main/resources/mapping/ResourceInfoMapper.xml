<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharism.resource_server.mapper.ResourceInfoMapper">
  <resultMap id="BaseResultMap" type="com.sharism.resource_server.model.ResourceInfo">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="parent_id" jdbcType="CHAR" property="parentId" />
    <result column="folder" jdbcType="INTEGER" property="folder" />
    <result column="file_sort" jdbcType="VARCHAR" property="fileSort" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_des" jdbcType="VARCHAR" property="fileDes" />
    <result column="file_size" jdbcType="DOUBLE" property="fileSize" />
    <result column="file_md5" jdbcType="VARCHAR" property="fileMd5" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="storage_path" jdbcType="VARCHAR" property="storagePath" />
    <result column="create_date" jdbcType="CHAR" property="createDate" />
    <result column="update_time" jdbcType="CHAR" property="updateTime" />
    <result column="privacy_set" jdbcType="INTEGER" property="privacySet" />
    <result column="del" jdbcType="INTEGER" property="del" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="need_password" jdbcType="INTEGER" property="needPassword" />
    <result column="file_password" jdbcType="VARCHAR" property="filePassword" />
    <result column="free" jdbcType="INTEGER" property="free" />
    <result column="pay_way" jdbcType="INTEGER" property="payWay" />
    <result column="pay_link" jdbcType="VARCHAR" property="payLink" />
    <result column="need_score" jdbcType="DOUBLE" property="needScore" />
    <result column="need_money" jdbcType="DOUBLE" property="needMoney" />
    <result column="download_amount" jdbcType="INTEGER" property="downloadAmount" />
    <result column="get_score" jdbcType="DOUBLE" property="getScore" />
    <result column="get_money" jdbcType="DOUBLE" property="getMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, parent_id, folder, file_sort, file_name, file_type, file_des, file_size, 
    file_md5, file_path, storage_path, create_date, update_time, privacy_set, del, weight, 
    need_password, file_password, free, pay_way, pay_link, need_score, need_money, download_amount, 
    get_score, get_money
  </sql>
  <select id="selectByExample" parameterType="com.sharism.resource_server.model.ResourceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from resource_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource_server_db
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from resource_server_db
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sharism.resource_server.model.ResourceInfoExample">
    delete from resource_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sharism.resource_server.model.ResourceInfo">
    insert into resource_server_db (id, user_id, parent_id, 
      folder, file_sort, file_name, 
      file_type, file_des, file_size, 
      file_md5, file_path, storage_path, 
      create_date, update_time, privacy_set, 
      del, weight, need_password, 
      file_password, free, pay_way, 
      pay_link, need_score, need_money, 
      download_amount, get_score, get_money
      )
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{parentId,jdbcType=CHAR}, 
      #{folder,jdbcType=INTEGER}, #{fileSort,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=VARCHAR}, #{fileDes,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE}, 
      #{fileMd5,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, #{storagePath,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, #{privacySet,jdbcType=INTEGER}, 
      #{del,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{needPassword,jdbcType=INTEGER}, 
      #{filePassword,jdbcType=VARCHAR}, #{free,jdbcType=INTEGER}, #{payWay,jdbcType=INTEGER}, 
      #{payLink,jdbcType=VARCHAR}, #{needScore,jdbcType=DOUBLE}, #{needMoney,jdbcType=DOUBLE}, 
      #{downloadAmount,jdbcType=INTEGER}, #{getScore,jdbcType=DOUBLE}, #{getMoney,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sharism.resource_server.model.ResourceInfo">
    insert into resource_server_db
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="folder != null">
        folder,
      </if>
      <if test="fileSort != null">
        file_sort,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileDes != null">
        file_des,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileMd5 != null">
        file_md5,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="storagePath != null">
        storage_path,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="privacySet != null">
        privacy_set,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="needPassword != null">
        need_password,
      </if>
      <if test="filePassword != null">
        file_password,
      </if>
      <if test="free != null">
        free,
      </if>
      <if test="payWay != null">
        pay_way,
      </if>
      <if test="payLink != null">
        pay_link,
      </if>
      <if test="needScore != null">
        need_score,
      </if>
      <if test="needMoney != null">
        need_money,
      </if>
      <if test="downloadAmount != null">
        download_amount,
      </if>
      <if test="getScore != null">
        get_score,
      </if>
      <if test="getMoney != null">
        get_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=CHAR},
      </if>
      <if test="folder != null">
        #{folder,jdbcType=INTEGER},
      </if>
      <if test="fileSort != null">
        #{fileSort,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileDes != null">
        #{fileDes,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="fileMd5 != null">
        #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="privacySet != null">
        #{privacySet,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="needPassword != null">
        #{needPassword,jdbcType=INTEGER},
      </if>
      <if test="filePassword != null">
        #{filePassword,jdbcType=VARCHAR},
      </if>
      <if test="free != null">
        #{free,jdbcType=INTEGER},
      </if>
      <if test="payWay != null">
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="payLink != null">
        #{payLink,jdbcType=VARCHAR},
      </if>
      <if test="needScore != null">
        #{needScore,jdbcType=DOUBLE},
      </if>
      <if test="needMoney != null">
        #{needMoney,jdbcType=DOUBLE},
      </if>
      <if test="downloadAmount != null">
        #{downloadAmount,jdbcType=INTEGER},
      </if>
      <if test="getScore != null">
        #{getScore,jdbcType=DOUBLE},
      </if>
      <if test="getMoney != null">
        #{getMoney,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sharism.resource_server.model.ResourceInfoExample" resultType="java.lang.Long">
    select count(*) from resource_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resource_server_db
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=CHAR},
      </if>
      <if test="record.folder != null">
        folder = #{record.folder,jdbcType=INTEGER},
      </if>
      <if test="record.fileSort != null">
        file_sort = #{record.fileSort,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileDes != null">
        file_des = #{record.fileDes,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=DOUBLE},
      </if>
      <if test="record.fileMd5 != null">
        file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.storagePath != null">
        storage_path = #{record.storagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=CHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=CHAR},
      </if>
      <if test="record.privacySet != null">
        privacy_set = #{record.privacySet,jdbcType=INTEGER},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.needPassword != null">
        need_password = #{record.needPassword,jdbcType=INTEGER},
      </if>
      <if test="record.filePassword != null">
        file_password = #{record.filePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.free != null">
        free = #{record.free,jdbcType=INTEGER},
      </if>
      <if test="record.payWay != null">
        pay_way = #{record.payWay,jdbcType=INTEGER},
      </if>
      <if test="record.payLink != null">
        pay_link = #{record.payLink,jdbcType=VARCHAR},
      </if>
      <if test="record.needScore != null">
        need_score = #{record.needScore,jdbcType=DOUBLE},
      </if>
      <if test="record.needMoney != null">
        need_money = #{record.needMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.downloadAmount != null">
        download_amount = #{record.downloadAmount,jdbcType=INTEGER},
      </if>
      <if test="record.getScore != null">
        get_score = #{record.getScore,jdbcType=DOUBLE},
      </if>
      <if test="record.getMoney != null">
        get_money = #{record.getMoney,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resource_server_db
    set id = #{record.id,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      parent_id = #{record.parentId,jdbcType=CHAR},
      folder = #{record.folder,jdbcType=INTEGER},
      file_sort = #{record.fileSort,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_des = #{record.fileDes,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=DOUBLE},
      file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      storage_path = #{record.storagePath,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=CHAR},
      update_time = #{record.updateTime,jdbcType=CHAR},
      privacy_set = #{record.privacySet,jdbcType=INTEGER},
      del = #{record.del,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      need_password = #{record.needPassword,jdbcType=INTEGER},
      file_password = #{record.filePassword,jdbcType=VARCHAR},
      free = #{record.free,jdbcType=INTEGER},
      pay_way = #{record.payWay,jdbcType=INTEGER},
      pay_link = #{record.payLink,jdbcType=VARCHAR},
      need_score = #{record.needScore,jdbcType=DOUBLE},
      need_money = #{record.needMoney,jdbcType=DOUBLE},
      download_amount = #{record.downloadAmount,jdbcType=INTEGER},
      get_score = #{record.getScore,jdbcType=DOUBLE},
      get_money = #{record.getMoney,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sharism.resource_server.model.ResourceInfo">
    update resource_server_db
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=CHAR},
      </if>
      <if test="folder != null">
        folder = #{folder,jdbcType=INTEGER},
      </if>
      <if test="fileSort != null">
        file_sort = #{fileSort,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileDes != null">
        file_des = #{fileDes,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="fileMd5 != null">
        file_md5 = #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        storage_path = #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="privacySet != null">
        privacy_set = #{privacySet,jdbcType=INTEGER},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="needPassword != null">
        need_password = #{needPassword,jdbcType=INTEGER},
      </if>
      <if test="filePassword != null">
        file_password = #{filePassword,jdbcType=VARCHAR},
      </if>
      <if test="free != null">
        free = #{free,jdbcType=INTEGER},
      </if>
      <if test="payWay != null">
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="payLink != null">
        pay_link = #{payLink,jdbcType=VARCHAR},
      </if>
      <if test="needScore != null">
        need_score = #{needScore,jdbcType=DOUBLE},
      </if>
      <if test="needMoney != null">
        need_money = #{needMoney,jdbcType=DOUBLE},
      </if>
      <if test="downloadAmount != null">
        download_amount = #{downloadAmount,jdbcType=INTEGER},
      </if>
      <if test="getScore != null">
        get_score = #{getScore,jdbcType=DOUBLE},
      </if>
      <if test="getMoney != null">
        get_money = #{getMoney,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sharism.resource_server.model.ResourceInfo">
    update resource_server_db
    set user_id = #{userId,jdbcType=CHAR},
      parent_id = #{parentId,jdbcType=CHAR},
      folder = #{folder,jdbcType=INTEGER},
      file_sort = #{fileSort,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_des = #{fileDes,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      file_md5 = #{fileMd5,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      storage_path = #{storagePath,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=CHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      privacy_set = #{privacySet,jdbcType=INTEGER},
      del = #{del,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      need_password = #{needPassword,jdbcType=INTEGER},
      file_password = #{filePassword,jdbcType=VARCHAR},
      free = #{free,jdbcType=INTEGER},
      pay_way = #{payWay,jdbcType=INTEGER},
      pay_link = #{payLink,jdbcType=VARCHAR},
      need_score = #{needScore,jdbcType=DOUBLE},
      need_money = #{needMoney,jdbcType=DOUBLE},
      download_amount = #{downloadAmount,jdbcType=INTEGER},
      get_score = #{getScore,jdbcType=DOUBLE},
      get_money = #{getMoney,jdbcType=DOUBLE}
    where id = #{id,jdbcType=CHAR}
  </update>


  <!--多条件查询-->
  <select id="selectResourcePage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from resource_server_db
    where user_id = #{userId,jdbcType=CHAR}

    <if test="fileSort != null">
      AND  file_sort = #{fileSort}
    </if>
    <if test="parentId != null and parentId !=''">
      AND  parent_id = #{parentId}
    </if>
    <if test="fileName != null">
      AND  file_name = #{fileName}
    </if>
    <if test="folder != null">
      AND   folder = #{folder}
    </if>
    <if test="fileDes != null">
      AND   file_des = #{fileDes}
    </if>

    <if test="fileSize != null">
      AND   file_size = #{fileSize}
    </if>
    <if test="filePath != null">
      AND    file_path = #{filePath}
    </if>
    <if test="storagePath != null">
      AND    storage_path  = #{storagePath}
    </if>
    <if test="createDate != null">
      AND    create_date  = #{createDate}
    </if>
    <if test="privacySet != null">
      AND     privacy_set    = #{privacySet}
    </if>
    <if test="del   != null">
      AND    del   = #{del }
    </if>
    <if test="weight  != null">
      AND    weight  = #{weight}
    </if>
    <if test="needPassword  != null">
      AND    need_password  = #{needPassword}
    </if>
    <if test="filePassword  != null">
      AND   file_password  = #{filePassword}
    </if>
    <if test="free  != null">
      AND    free  = #{free}
    </if>
    <if test="needScore  != null">
      AND    need_score = #{needScore}
    </if>
    <if test="needMoney   != null">
      AND  need_money = #{needMoney}
    </if>

    <if test="arrange == 'ASC'">
      ORDER BY  create_date  ASC
    </if>
    <if test="arrange == 'DESC'">
      ORDER BY  create_date  DESC
    </if>
    <if test="arrange == null">
      ORDER BY  create_date  DESC
    </if>
  </select>
  <!--批量设置为删除状态-->
  <update id="batchSetResourceDeleteStatus" parameterType="java.util.List">
    update resource_server_db set del = 1 where user_id= #{userId} AND id in
    <foreach collection="list" item="item" index="index" open="(" close=")"  separator="," >
      #{item}
    </foreach>

  </update>

  <!--批量移动文件-->
  <update id="batchMoveFile" parameterType="java.util.List">
    update resource_server_db set parent_id = #{parentId} where  id in
    <foreach collection="list" item="item" index="index" open="(" close=")"  separator="," >
      #{item}
    </foreach>

  </update>






  <!--移动列表显示-->
  <select id="selectMoveResourcePage"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from resource_server_db
    where user_id = #{userId,jdbcType=CHAR}
    <if test="parentId != null and parentId !=''">
        AND  parent_id = #{parentId}
    </if>
    AND   folder = 1
    AND    del   = 0

    AND
    parent_id not in
    <foreach collection="list" item="item" index="index" open="(" close=")"  separator="," >
      #{item}
    </foreach>
    AND
    id not in
    <foreach collection="list" item="item" index="index" open="(" close=")"  separator="," >
      #{item}
    </foreach>


      ORDER BY  create_date  DESC

  </select>
</mapper>